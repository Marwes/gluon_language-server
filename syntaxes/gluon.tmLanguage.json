{
    "name": "Gluon",
    "fileTypes": [
        "glu"
    ],
    "patterns": [
        {
            "match": "(?<![\\d.])\\s0x[a-fA-F\\d]+|\\b\\d+(\\.\\d+)?([eE]-?\\d+)?|\\.\\d+([eE]-?\\d+)?",
            "name": "constant.numeric.glu"
        },
        {
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.glu"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.glu"
                }
            },
            "name": "string.quoted.single.glu",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.glu"
                }
            ]
        },
        {
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.glu"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.glu"
                }
            },
            "name": "string.quoted.double.glu",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.glu"
                }
            ]
        },
        {
            "begin": "/\\*",
            "captures": {
                "0": {
                    "name": "punctuation.definition.comment.glu"
                }
            },
            "end": "\\*/",
            "name": "comment.block.glu"
        },
        {
            "begin": "(^[ \\t]+)?(?=//)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.whitespace.comment.leading.glu"
                }
            },
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "//",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.glu"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.double-slash.glu"
                }
            ]
        },
        {
            "match": "\\b(if|then|else|match|with|do|rec)\\b",
            "name": "keyword.control.glu"
        },
        {
            "match": "\\b(in)\\b",
            "name": "keyword.glu"
        },
        {
            "match": "(?:,|{)\\s*(\\?)\\s*}|(\\?)[a-zA-Z0-9_]+",
            "captures": {
                "1": {
                    "name": "keyword.control.implicit-operator.glu"
                },
                "2": {
                    "name": "keyword.control.implicit-operator.glu"
                }
            }
        },
        {
            "match": "\\b(True|False)\\b",
            "name": "constant.language.boolean.glu"
        },
        {
            "match": "(?<=[^.]\\.|:)\\b([A-Za-z_]\\w*)",
            "name": "variable.other.glu"
        },
        {
            "match": "\\b[A-Za-z_]*\\!\\s",
            "name": "entity.name.function.macro.glu"
        },
        {
            "begin": "#\\[",
            "end": "\\]",
            "name": "meta.attribute.glu"
        },
        {
            "match": "\\+|-|\\*|\\/|\\^|==?|\\/=|&|<=?|>=?|\\||\\?",
            "name": "keyword.operator.glu"
        },
        {
            "match": "(\\\\)[a-zA-Z0-9_]+",
            "captures": {
                "1": {
                    "name": "entity.name.function.glu"
                }
            }
        },
        {
            "match": "\\b(let)\\s+([a-zA-Z0-9_]+)(?:\\s+(\\?)?[a-zA-Z0-9_]+)+|\\b(let)\\b",
            "captures": {
                "1": {
                    "name": "keyword.glu"
                },
                "2": {
                    "name": "entity.name.function.glu"
                },
                "3": {
                    "name": "keyword.control.implicit-operator.glu"
                },
                "4": {
                    "name": "keyword.glu"
                }
            }
        },
        {
            "begin": ":|\\b(type)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.glu"
                }
            },
            "end": "(=)|}|,",
            "endCaptures": {
                "1": {
                    "name": "keyword.operator.glu"
                }
            },
            "patterns": [
                {
                    "include": "#types-atom"
                },
                {
                    "include": "#types-parens"
                }
            ]
        }
    ],
    "repository": {
        "types-parens": {
            "begin": "\\(",
            "end": "\\)",
            "patterns": [
                {
                    "include": "#types-atom"
                },
                {
                    "include": "#types-parens"
                }
            ]
        },
        "types-atom": {
            "patterns": [
                {
                    "match": "->",
                    "name": "keyword.operator.glu"
                },
                {
                    "match": "forall",
                    "name": "keyword.glu"
                },
                {
                    "match": "\\b[A-Z][a-zA-Z0-9_]*\\b",
                    "name": "entity.name.type.glu"
                },
                {
                    "match": "\\b[a-z][a-z0-9_]*\\b",
                    "name": "entity.name.type.parameter.glu"
                }
            ]
        }
    },
    "scopeName": "source.glu",
    "uuid": "61b885fb-765c-44ba-abef-09a3700852be"
}